
Fatbin elf code:
================
arch = sm_10
code version = [1,2]
producer = cuda
host = linux
compile_size = 64bit
identifier = vecadd.cu

.section .strtab	STRTAB

.section .shstrtab	STRTAB

.section .symtab	SYMTAB
 index           value           size      info    other  shndx    name  
   0               0               0        0        0      0     (null)
   1               0               0        3        0      1     .shstrtab
   2               0               0        3        0      2     .strtab
   3               0               0        3        0      3     .symtab
   4               0               0        3        0      0     
   5               0               0        3        0      0     
   6               0             352        3        0      4     .text._Z6vecAddPiS_S_i
   7               0               0        3        0      5     .nv.info._Z6vecAddPiS_S_i
   8               0               0        3        0      6     .nv.shared._Z6vecAddPiS_S_i
   9               0               0       12       10      4     _Z6vecAddPiS_S_i


.nv.shared._Z6vecAddPiS_S_i	NOBITS
   No data to be dumped. 


.text._Z6vecAddPiS_S_i	PROGBITS
bar = 0	reg = 8	lmem=0	smem=44
0x10004205  0x0023c780  0xa0000005  0x04000780  
0x60014c01  0x00204780  0x30020009  0xc4100780  
0x2102e800  0x2102ec04  0xd00e0001  0x80c00780  
0xd00e0205  0x80c00780  0x2000b003  0x00000000  
0x2000d005  0x04208780  0xd00e0201  0xa0c00780  
0x30000003  0x00000780  0xa000020d  0x04114780  
0xa0000611  0x44004780  0xa0000015  0x04114780  
0x90000819  0x00000780  0xa0000a11  0x44064780  
0x203e8c19  0x0fffffff  0xc0060811  0x0000c7c0  
0xa0000811  0x84064780  0x40090c1d  0x00000780  
0x60080e1d  0x0001c780  0x30100e1d  0xc4100780  
0x60080c1d  0x0001c780  0x20400a1d  0x0401c780  
0xa0000e1d  0x44064780  0xc0060e19  0x0000c7c0  
0xa0000c19  0x84064780  0x20000811  0x04018780  
0x40061219  0x00000780  0x60071019  0x00018780  
0x30100c19  0xc4100780  0x60061019  0x00018780  
0x30000c15  0x04014780  0x3005060d  0x6400c780  
0xd0000201  0x04008780  0x301f0001  0xe4100780  
0x30000611  0x04010780  0xa000000d  0x2c014780  
0xd004060d  0x04008780  0x307c03fd  0x6c0147c8  
0x20000001  0x0400c780  0xd0010001  0x0402c500  
0x30000003  0x00000780  0xf0000001  0xe0000001  



.nv.info._Z6vecAddPiS_S_i	PROGBITS
	<0x1>
	Attribute:	EIATTR_SMEM_PARAM_OFFSETS
	Format:	EIFMT_SVAL
	Value:	0x0 0x8 0x10 0x18 
	<0x2>
	Attribute:	EIATTR_SMEM_PARAM_SIZE
	Format:	EIFMT_HVAL
	Value:	0x1c
	<0x3>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0xffffffff	Ordinal : 0x3	Offset  : 0x18	Size    : 0x4
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : SMEM	
	<0x4>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0xffffffff	Ordinal : 0x2	Offset  : 0x10	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : SMEM	
	<0x5>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0xffffffff	Ordinal : 0x1	Offset  : 0x8	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : SMEM	
	<0x6>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0xffffffff	Ordinal : 0x0	Offset  : 0x0	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : SMEM	
	<0x7>
	Attribute:	EIATTR_SYNC_STACK
	Format:	EIFMT_SVAL
	Value:	0x30018 0x1 

	code for sm_10
		Function : _Z6vecAddPiS_S_i
	/*0000*/     /*0x100042050023c780*/ 	MOV.U16 R0H, g [0x1].U16;
	/*0008*/     /*0xa000000504000780*/ 	I2I.U32.U16 R1, R0L;
	/*0010*/     /*0x60014c0100204780*/ 	IMAD.U16 R0, g [0x6].U16, R0H, R1;
	/*0018*/     /*0x30020009c4100780*/ 	SHL R2, R0, 0x2;
	/*0020*/     /*0x2102e800        */ 	IADD32 R0, g [0x4], R2;
	/*0024*/     /*0x2102ec04        */ 	IADD32 R1, g [0x6], R2;
	/*0028*/     /*0xd00e000180c00780*/ 	GLD.U32 R0, global14 [R0];
	/*0030*/     /*0xd00e020580c00780*/ 	GLD.U32 R1, global14 [R1];
	/*0038*/     /*0x2000b00300000000*/ 	CAL.NOINC 0x58;
	/*0040*/     /*0x2000d00504208780*/ 	IADD R1, g [0x8], R2;
	/*0048*/     /*0xd00e0201a0c00780*/ 	GST.U32 global14 [R1], R0;
	/*0050*/     /*0x3000000300000780*/ 	RET;
	/*0058*/     /*0xa000020d04114780*/ 	I2I.U32.S32 R3, |R1|;
	/*0060*/     /*0xa000061144004780*/ 	I2F.F32.U32 R4, R3;
	/*0068*/     /*0xa000001504114780*/ 	I2I.U32.S32 R5, |R0|;
	/*0070*/     /*0x9000081900000780*/ 	RCP R6, R4;
	/*0078*/     /*0xa0000a1144064780*/ 	I2F.F32.U32.TRUNC R4, R5;
	/*0080*/     /*0x203e8c190fffffff*/ 	IADD32I R6, R6, 0xfffffffe;
	/*0088*/     /*0xc00608110000c7c0*/ 	FMUL.TRUNC.C0 R4, R4, R6;
	/*0090*/     /*0xa000081184064780*/ 	F2I.U32.F32.TRUNC R4, R4;
	/*0098*/     /*0x40090c1d00000780*/ 	IMUL.U16.U16 R7, R3L, R4H;
	/*00a0*/     /*0x60080e1d0001c780*/ 	IMAD.U16 R7, R3H, R4L, R7;
	/*00a8*/     /*0x30100e1dc4100780*/ 	SHL R7, R7, 0x10;
	/*00b0*/     /*0x60080c1d0001c780*/ 	IMAD.U16 R7, R3L, R4L, R7;
	/*00b8*/     /*0x20400a1d0401c780*/ 	IADD R7, R5, -R7;
	/*00c0*/     /*0xa0000e1d44064780*/ 	I2F.F32.U32.TRUNC R7, R7;
	/*00c8*/     /*0xc0060e190000c7c0*/ 	FMUL.TRUNC.C0 R6, R7, R6;
	/*00d0*/     /*0xa0000c1984064780*/ 	F2I.U32.F32.TRUNC R6, R6;
	/*00d8*/     /*0x2000081104018780*/ 	IADD R4, R4, R6;
	/*00e0*/     /*0x4006121900000780*/ 	IMUL.U16.U16 R6, R4H, R3L;
	/*00e8*/     /*0x6007101900018780*/ 	IMAD.U16 R6, R4L, R3H, R6;
	/*00f0*/     /*0x30100c19c4100780*/ 	SHL R6, R6, 0x10;
	/*00f8*/     /*0x6006101900018780*/ 	IMAD.U16 R6, R4L, R3L, R6;
	/*0100*/     /*0x30000c1504014780*/ 	IADD R5, -R6, R5;
	/*0108*/     /*0x3005060d6400c780*/ 	ISET R3, R3, R5, LE;
	/*0110*/     /*0xd000020104008780*/ 	LOP.XOR R0, R1, R0;
	/*0118*/     /*0x301f0001e4100780*/ 	SHR R0, R0, 0x1f;
	/*0120*/     /*0x3000061104010780*/ 	IADD R4, -R3, R4;
	/*0128*/     /*0xa000000d2c014780*/ 	I2I.S32.S32 R3, -R0;
	/*0130*/     /*0xd004060d04008780*/ 	LOP.XOR R3, R3, R4;
	/*0138*/     /*0x307c03fd6c0147c8*/ 	ISET.S32.C0 o [0x7f], R1, R124, NE;
	/*0140*/     /*0x200000010400c780*/ 	IADD R0, R0, R3;
	/*0148*/     /*0xd00100010402c500*/ 	LOP.PASS_B R0 (C0.EQU), R0, ~R1;
	/*0150*/     /*0x3000000300000780*/ 	RET;
	/*0158*/     /*0xf0000001e0000001*/ 	NOP;
		.................................



Fatbin ptx code:
================
arch = sm_10
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
identifier = vecadd.cu
	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/local/cuda/open64/lib//be
	// nvopencc 4.0 built on 2011-05-12

	//-----------------------------------------------------------
	// Compiling /tmp/tmpxft_0000568f_00000000-7_vecadd.cpp3.i (/tmp/ccBI#.TxTM6s)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"/tmp/tmpxft_0000568f_00000000-6_vecadd.cudafe2.gpu"
	.file	3	"/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h"
	.file	4	"/usr/local/cuda/bin/../include/crt/device_runtime.h"
	.file	5	"/usr/local/cuda/bin/../include/host_defines.h"
	.file	6	"/usr/local/cuda/bin/../include/builtin_types.h"
	.file	7	"/usr/local/cuda/bin/../include/device_types.h"
	.file	8	"/usr/local/cuda/bin/../include/driver_types.h"
	.file	9	"/usr/local/cuda/bin/../include/surface_types.h"
	.file	10	"/usr/local/cuda/bin/../include/texture_types.h"
	.file	11	"/usr/local/cuda/bin/../include/vector_types.h"
	.file	12	"/usr/local/cuda/bin/../include/device_launch_parameters.h"
	.file	13	"/usr/local/cuda/bin/../include/crt/storage_class.h"
	.file	14	"/usr/include/x86_64-linux-gnu/bits/types.h"
	.file	15	"/usr/include/x86_64-linux-gnu/bits/types/clock_t.h"
	.file	16	"vecadd.cu"
	.file	17	"/usr/local/cuda/bin/../include/common_functions.h"
	.file	18	"/usr/local/cuda/bin/../include/math_functions.h"
	.file	19	"/usr/local/cuda/bin/../include/math_constants.h"
	.file	20	"/usr/local/cuda/bin/../include/device_functions.h"
	.file	21	"/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	22	"/usr/local/cuda/bin/../include/sm_12_atomic_functions.h"
	.file	23	"/usr/local/cuda/bin/../include/sm_13_double_functions.h"
	.file	24	"/usr/local/cuda/bin/../include/sm_20_atomic_functions.h"
	.file	25	"/usr/local/cuda/bin/../include/sm_20_intrinsics.h"
	.file	26	"/usr/local/cuda/bin/../include/surface_functions.h"
	.file	27	"/usr/local/cuda/bin/../include/texture_fetch_functions.h"
	.file	28	"/usr/local/cuda/bin/../include/math_functions_dbl_ptx1.h"


	.entry _Z6vecAddPiS_S_i (
		.param .u64 __cudaparm__Z6vecAddPiS_S_i_A,
		.param .u64 __cudaparm__Z6vecAddPiS_S_i_B,
		.param .u64 __cudaparm__Z6vecAddPiS_S_i_C,
		.param .s32 __cudaparm__Z6vecAddPiS_S_i_N)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<8>;
	.reg .u64 %rd<10>;
	.loc	16	8	0
$LDWbegin__Z6vecAddPiS_S_i:
	.loc	16	11	0
	cvt.u32.u16 	%r1, %tid.x;
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r2, %rh1, %rh2;
	add.u32 	%r3, %r1, %r2;
	cvt.s64.s32 	%rd1, %r3;
	mul.wide.s32 	%rd2, %r3, 4;
	ld.param.u64 	%rd3, [__cudaparm__Z6vecAddPiS_S_i_A];
	add.u64 	%rd4, %rd3, %rd2;
	ld.global.s32 	%r4, [%rd4+0];
	ld.param.u64 	%rd5, [__cudaparm__Z6vecAddPiS_S_i_B];
	add.u64 	%rd6, %rd5, %rd2;
	ld.global.s32 	%r5, [%rd6+0];
	div.s32 	%r6, %r4, %r5;
	ld.param.u64 	%rd7, [__cudaparm__Z6vecAddPiS_S_i_C];
	add.u64 	%rd8, %rd7, %rd2;
	st.global.s32 	[%rd8+0], %r6;
	.loc	16	12	0
	exit;
$LDWend__Z6vecAddPiS_S_i:
	} // _Z6vecAddPiS_S_i

